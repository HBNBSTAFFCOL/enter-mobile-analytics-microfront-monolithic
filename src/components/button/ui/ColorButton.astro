---
interface Props {
    backgroundColor:string;
    dataImageSrc: string;
    cardTitle: string;
    id: string;
    onClick: (imageSrc: string, cardTitle: string) => void ;
    onClick2?: {handleButtonClick(event)};
}

const { backgroundColor, dataImageSrc, cardTitle, onClick, id, onClick2 } = Astro.props;
---

<button
    class="card__nav-button"
    id = {id} 
    data-image-src={dataImageSrc}
    data-card-id={cardTitle.replace(/\s+/g, '-').toLowerCase()}
    onclick = `{onClick}`
>
    <figure
        class="card__nav-color"
        style={`background-color: ${backgroundColor};`}
    ></figure>
</button>

<script>
    function handleButtonClick(event) {
        const button = event.currentTarget;
        const figure = button.querySelector('.card__nav-color');

        // Agrega la clase 'bounce' al figure para aplicar la animación
        figure.classList.add('bounce');

        // Espera un tiempo y luego quita la clase 'bounce' para detener la animación
        setTimeout(() => {
            figure.classList.remove('bounce');
        }, 1000); // Ajusta el tiempo según la duración de tu animación (en milisegundos)
    }
</script>

<style define:vars={{backgroundColor}}>
    .card__nav-button {
        background-color: transparent;
        display: flex;
        width: 3rem;
        height: 3rem;
        border-radius: 50%;
        margin: 0.5rem;
        justify-content: center;
        align-items: center;
        position: relative;
        cursor: pointer;
        box-shadow: 0px 5px 13px rgb(0 0 0 / 70%);
        max-width: 100%;
    }

    .card__nav-button:hover {
        animation: bounce 1s infinite;
    }

    .card__nav-color {
        width: 80%;
        height: 80%;
        border-radius: 50%;
        background-color: var(--backgroundColor);
        border: solid #9c9c9c 1px;
    }

    @media (max-width: 576px) {

        .card__nav-button{
            width: 2rem;
            height: 2rem;
            margin: 0.1rem; 
        }
    }

    @keyframes bounce {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
    }

</style>
